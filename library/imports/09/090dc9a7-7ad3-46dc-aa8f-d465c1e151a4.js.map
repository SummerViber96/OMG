{"version":3,"sources":["assets\\scripts\\giaoBullet.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// import { Constant } from \"../../Constant_1_1\";\r\n// import Bullet from \"../../tower/Bullet\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {}\r\n\r\n    start() {\r\n\r\n    }\r\n    shoot(enemy, tower) {\r\n        // this.data = tower.data;\r\n        this.shootCustom(enemy, tower);\r\n    }\r\n    shootCustom(enemy, tower) {\r\n        // cc.Canvas.instance.node.emit(Constant.EVENT.ARCHER_SHOOT);\r\n        // this.node.zIndex = Constant.TOWER_FRONT_BULLET_ZINDEX;\r\n\r\n        this.node.setPosition(cc.v3(0, 90));\r\n        this.node.zIndex = (tower.isFront) ? 4 : 0;\r\n\r\n        let enemyNode = enemy;\r\n        let ePosW = enemyNode.parent.convertToWorldSpaceAR(enemyNode.position);\r\n        let ePos = this.node.parent.convertToNodeSpaceAR(ePosW);\r\n\r\n        // move\r\n        let tPos = cc.v2(this.node.position.x, this.node.position.y);\r\n        let middlePosX = (ePos.x - this.node.position.x) / 2;\r\n\r\n        let rotateParam = (this.node.parent.x < enemyNode.x) ? 1 : -1;\r\n        this.node.angle = (this.node.parent.x < enemyNode.x) ? 50 : 130;\r\n\r\n        this.getRotateAngle(enemy, tower);\r\n\r\n        this.node.runAction(cc.sequence(cc.spawn(cc.bezierTo(0.6, [tPos, tPos.add(cc.v2(middlePosX, this.getShootHeight(enemy, tower))), ePos.add(cc.v3(0, 30))]),\r\n            cc.rotateBy(0.6, this.getRotateAngle(enemy, tower) * rotateParam)\r\n        ),\r\n            cc.callFunc(function () {\r\n                if (enemy.isValid) {\r\n                    // enemy.attacked(this.data.attackDamage, this.data.attackType);\r\n                }\r\n                this.node.destroy();\r\n            }.bind(this))));\r\n    }\r\n\r\n    getShootHeight(enemy, tower) {\r\n        let ePos = enemy.position;\r\n        let tPos = tower.node.position;\r\n        let distance = Math.abs(Math.abs(ePos.x) - Math.abs(tPos.x));\r\n        if (distance < 30) {\r\n            return 10;\r\n        } else if (distance < 50) {\r\n            return 30;\r\n        } else if (distance < 100) {\r\n            return 60;\r\n        } else if (distance < 150) {\r\n            return 80;\r\n        }\r\n        return 100;\r\n    }\r\n\r\n    getRotateAngle(enemy, tower) {\r\n        let ePos = enemy.position;\r\n        let tPos = tower.node.position;\r\n        let distance = Math.abs(Math.abs(ePos.x) - Math.abs(tPos.x));\r\n        if (tower.isFront) {\r\n            if (distance < 50) {\r\n                return 140;\r\n            } else if (distance < 100) {\r\n                return 130;\r\n            } else if (distance < 150) {\r\n                return 120;\r\n            }\r\n            return 60;\r\n        }\r\n        return 50;\r\n    }\r\n\r\n    getDistance(destination) {\r\n        return destination.sub(this.node.position).mag();\r\n    }\r\n\r\n    getStartPos(tower) {\r\n        let anim = tower.anim.node;\r\n        let anim2 = tower.anim2.node;\r\n        let addPos = cc.v3();\r\n        if (anim.name == anim2.name) {\r\n            addPos = cc.v3(-4, 59);\r\n        } else {\r\n            addPos = cc.v3(26, 64);\r\n        }\r\n        return this.node.position.add(addPos);\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n"]}