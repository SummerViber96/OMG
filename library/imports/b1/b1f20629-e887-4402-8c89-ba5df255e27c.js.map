{"version":3,"sources":["assets\\scripts\\card\\card.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAEM,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAsC,4BAAY;IAAlD;QAAA,qEA6CC;QA1CG,aAAO,GAAc,IAAI,CAAC;QAE1B,WAAK,GAAmB,IAAI,CAAC;QAE7B,YAAM,GAAmB,IAAI,CAAC;QAE9B,aAAO,GAAY,IAAI,CAAC;QAExB,eAAS,GAAY,IAAI,CAAC;QAE1B,aAAO,GAAG,CAAC,CAAC;QACZ,aAAO,GAAG,KAAK,CAAA;;IA+BnB,CAAC;IA9BG,wBAAK,GAAL;QACI,gBAAgB;IACpB,CAAC;IACD,wBAAK,GAAL;QACI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACf,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,MAAM,GAAG,IAAI,CAAA;SACjD;QACD,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;QACtC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QACnD,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC,CAAA;IACxD,CAAC;IACD,2BAAQ,GAAR;QACI,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,MAAM,GAAG,KAAK,CAAA;IAEnD,CAAC;IACD,yBAAM,GAAN;QACI,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC;QACvC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QACnD,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC,CAAA;IACxD,CAAC;IACD,yBAAM,GAAN,UAAO,EAAE;QACL,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAA;QACtE,IAAI,UAAU,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE;YACjC,IAAI,CAAC,KAAK,EAAE,CAAC;SAChB;aACI;YACD,IAAI,CAAC,MAAM,EAAE,CAAA;SAChB;IACL,CAAC;IAzCD;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;6CACM;IAE1B;QADC,QAAQ,CAAC,EAAE,CAAC,WAAW,CAAC;2CACI;IAE7B;QADC,QAAQ,CAAC,EAAE,CAAC,WAAW,CAAC;4CACK;IAE9B;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;6CACM;IAExB;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;+CACQ;IAE1B;QADC,QAAQ,CAAC,EAAE,CAAC,OAAO,CAAC;6CACT;IAbK,QAAQ;QAD5B,OAAO;OACa,QAAQ,CA6C5B;IAAD,eAAC;CA7CD,AA6CC,CA7CqC,EAAE,CAAC,SAAS,GA6CjD;kBA7CoB,QAAQ","file":"","sourceRoot":"/","sourcesContent":["\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n\r\n    @property(cc.Sprite)\r\n    iconImg: cc.Sprite = null;\r\n    @property(cc.SpriteFrame)\r\n    imgOn: cc.SpriteFrame = null;\r\n    @property(cc.SpriteFrame)\r\n    imgOff: cc.SpriteFrame = null;\r\n    @property(cc.Node)\r\n    lbTitle: cc.Node = null;\r\n    @property(cc.Node)\r\n    lbCurrent: cc.Node = null;\r\n    @property(cc.Integer)\r\n    current = 1;\r\n    isFirst = false\r\n    start() {\r\n        // this.setOff()\r\n    }\r\n    setOn() {\r\n        if (!this.isFirst) {\r\n            this.isFirst = true;\r\n            this.node.getChildByName(\"hand\").active = true\r\n        }\r\n        this.iconImg.spriteFrame = this.imgOn;\r\n        this.lbTitle.color = cc.color().fromHEX(\"#824420\");\r\n        this.lbCurrent.color = cc.color().fromHEX(\"#824420\")\r\n    }\r\n    clickOff(){\r\n        this.node.getChildByName(\"hand\").active = false\r\n\r\n    }\r\n    setOff() {\r\n        this.iconImg.spriteFrame = this.imgOff;\r\n        this.lbTitle.color = cc.color().fromHEX(\"#515151\");\r\n        this.lbCurrent.color = cc.color().fromHEX(\"#515151\")\r\n    }\r\n    update(dt) {\r\n        this.lbCurrent.getComponent(cc.Label).string = this.current.toString()\r\n        if (globalThis.ruby >= this.current) {\r\n            this.setOn();\r\n        }\r\n        else {\r\n            this.setOff()\r\n        }\r\n    }\r\n}\r\n"]}