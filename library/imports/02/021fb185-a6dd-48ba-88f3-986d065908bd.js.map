{"version":3,"sources":["assets\\scripts\\listener\\charListener.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+CAA+B;AAEzB,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAsC,4BAAY;IAAlD;QAAA,qEAmEC;QA/DG,eAAS,GAAG,IAAI,CAAC;QACjB,cAAQ,GAAG,IAAI,CAAC;QAChB,aAAO,GAAG,IAAI,CAAC;;IA6DnB,CAAC;IAlEG,wBAAK,GAAL;IAEA,CAAC;IAID,yBAAM,GAAN;QACI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC;QACvC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAA;IAClE,CAAC;IACD,mCAAgB,GAAhB,UAAiB,KAAK,EAAE,IAAI;QAExB,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,sBAAE,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,KAAK,IAAI,IAAI,EAAE;YAEvH,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,cAAc,CAAC,CAAC,OAAO,GAAC,KAAK,CAAA;YAExD,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;SAE3C;QACD,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,KAAK,IAAI,KAAK,EAAE;YACpD,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,KAAK,CAAC,YAAY,CAAC,sBAAE,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,KAAK,IAAI,KAAK,EAAE;gBACpH,IAAG,IAAI,CAAC,OAAO,EAAC;oBACf,IAAI,CAAC,OAAO,GAAG,KAAK,CAAA;oBACpB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,GAAC,KAAK,CAAA;oBACpC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,IAAI,CAAA;iBACjD;gBACA,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,cAAc,CAAC,CAAC,OAAO,GAAC,KAAK,CAAA;gBAExD,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;aAExC;SAEJ;IAIL,CAAC;IACD,kCAAe,GAAf,UAAgB,KAAK,EAAE,IAAI;QACvB,qEAAqE;QACrE,oCAAoC;QACpC,6DAA6D;QAC7D,IAAI;IACR,CAAC;IACD,kCAAe,GAAf,UAAgB,KAAK,EAAE,IAAI;QACvB,qEAAqE;QACrE,sEAAsE;QAEtE,IAAI;QAGJ,4DAA4D;QAC5D,4CAA4C;QAC5C,iEAAiE;QACjE,QAAQ;QACR,qCAAqC;QACrC,wCAAwC;QACxC,iEAAiE;QACjE,QAAQ;QACR,4CAA4C;QAC5C,kCAAkC;QAClC,QAAQ;QACR,IAAI;IAER,CAAC;IAhEgB,QAAQ;QAD5B,OAAO;OACa,QAAQ,CAmE5B;IAAD,eAAC;CAnED,AAmEC,CAnEqC,EAAE,CAAC,SAAS,GAmEjD;kBAnEoB,QAAQ","file":"","sourceRoot":"/","sourcesContent":["import TL from \"./treeListener\"\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n    start() {\r\n\r\n    }\r\n    className = null;\r\n    gamePlay = null;\r\n    isFirst = true;\r\n    onLoad() {\r\n        this.className = this[\"__classname__\"];\r\n        this.gamePlay = cc.Canvas.instance.node.getComponent(\"ICY_19\")\r\n    }\r\n    onCollisionEnter(other, self) {\r\n\r\n        if (self.getComponent(this.className) && other.node.getComponent(TL) && this.node.getComponent(\"character\").isSub == true) {\r\n   \r\n            other.node.getComponent(cc.CircleCollider).enabled=false\r\n\r\n            this.gamePlay.collectEggsSub(other.node)\r\n\r\n        }\r\n        if (this.node.getComponent(\"character\").isSub == false) {\r\n            if (self.getComponent(this.className) && other.getComponent(TL) && this.node.getComponent(\"character\").isSub == false) {\r\n               if(this.isFirst){\r\n                this.isFirst = false\r\n                this.gamePlay.arrowNode.active=false\r\n                this.gamePlay.listArrow.children[3].active = true\r\n               }\r\n                other.node.getComponent(cc.CircleCollider).enabled=false\r\n\r\n                this.gamePlay.collectEggs(other.node)\r\n\r\n            }\r\n        \r\n        }\r\n\r\n \r\n\r\n    }\r\n    onCollisionStay(other, self) {\r\n        // if (other.node.name == \"ke\" && this.gamePlay.isTranske == false) {\r\n        //     this.gamePlay.offWoodFromKe()\r\n        //     // this.node.getComponent(\"character\").isSellding=true\r\n        // }\r\n    }\r\n    onCollisionExit(other, self) {\r\n        // if (self.getComponent(this.className) && other.getComponent(TL)) {\r\n        //     this.node.getComponent(\"character\").removeEnemy(other.node._id)\r\n\r\n        // }\r\n\r\n\r\n        // if (this.node.getComponent(\"character\").isSub == false) {\r\n        //     if (other.node.name == \"sellToCus\") {\r\n        //         this.node.getComponent(\"character\").isSellding = false\r\n        //     }\r\n        //     if (other.node.name == \"ke\") {\r\n        //         this.gamePlay.offWoodFromKe()\r\n        //         // this.node.getComponent(\"character\").isSellding=true\r\n        //     }\r\n        //     if (other.node.name == \"sellToCus\") {\r\n        //         this.gamePlay.offSell()\r\n        //     }\r\n        // }\r\n \r\n    }\r\n\r\n\r\n}\r\n"]}